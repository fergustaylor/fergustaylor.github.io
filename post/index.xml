<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Fergus Taylor</title>
    <link>https://fergustaylor.github.io/post/</link>
    <description>Recent content on Fergus Taylor</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-uk</language>
    <lastBuildDate>Tue, 27 Mar 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://fergustaylor.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>OpenprescribingR Plots Updated</title>
      <link>https://fergustaylor.github.io/post/openprescribingr-plots-updated/</link>
      <pubDate>Tue, 27 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://fergustaylor.github.io/post/openprescribingr-plots-updated/</guid>
      <description>18:30 : Was experimenting with in-line js to get the heights correct on the iframes below, and posted early because of a cross-domain issues. Will still be updating the text as I go, but keeping it as is for now.
CCGs plotted as geom_polygon_interactive with CCG names as tooltips
 CCGs with prescribing centres overlaid as points
 CCGs with fill colour scaled according to cost per person on &amp;lsquo;BNF Section 7.</description>
    </item>
    
    <item>
      <title>Drug Selections</title>
      <link>https://fergustaylor.github.io/post/drug-selections/</link>
      <pubDate>Fri, 09 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://fergustaylor.github.io/post/drug-selections/</guid>
      <description>I decided it might be useful to see the interaction information as plain text. Whereas the graph demonstrates the interactions which exist between drugs, as well as conveying the absence of interactions, this can be used as a checklist of warnings in a given drug selection.
 I may add more detail later, such as evidence/severity, and colour coding on severe interactions. But for now it&amp;rsquo;s a list-view of all the interactions known.</description>
    </item>
    
    <item>
      <title>Custom Drug Selections</title>
      <link>https://fergustaylor.github.io/post/custom-drug-selections/</link>
      <pubDate>Tue, 27 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://fergustaylor.github.io/post/custom-drug-selections/</guid>
      <description>Since my last post I&amp;rsquo;ve updated my original &amp;ldquo;top 100&amp;rdquo; graph, introducing a checkbox for recoloring the paths in red which represent &amp;lsquo;severe&amp;rsquo; interactions.
I&amp;rsquo;m fairly happy with the form of my graph now, although I&amp;rsquo;m still considering the ways I could make it visually informative.
Ideally my intentions were to use hierachical edge bundling as a visual shortcut to allow the viewer to appraise whole drug classes. I.e look at a node on the edge representing a certain drug.</description>
    </item>
    
    <item>
      <title>Drug Interactions with Hierarchical Edge Bundling</title>
      <link>https://fergustaylor.github.io/post/drug-interactions-with-hierarchical-edge-bundling/</link>
      <pubDate>Sat, 03 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://fergustaylor.github.io/post/drug-interactions-with-hierarchical-edge-bundling/</guid>
      <description>So I&amp;rsquo;ve finally managed to introduce a hierachical edge bundling method based on an arbitrary list of drug classes. (Adjustable via the tension bar I&amp;rsquo;d previously hidden). I think this makes it far more visually informative now, but I&amp;rsquo;m still playing around with a dev version to consider how I can provide more informational cues to the user.
For now I&amp;rsquo;m going to take a small break to learn some general D3 skills.</description>
    </item>
    
    <item>
      <title>BNF Interactions</title>
      <link>https://fergustaylor.github.io/post/bnf-interactions/</link>
      <pubDate>Tue, 16 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://fergustaylor.github.io/post/bnf-interactions/</guid>
      <description>I made a few bits of progress.
Here.
I&amp;rsquo;m a bit lazy to make a &amp;lsquo;how-to&amp;rsquo; tonight.
But in summary - I&amp;rsquo;ve linked my graph to the interaction messages, severities, evidence gradings taken from bnf.nice.org.uk/interaction/. This reflects the new data being listed by the BNF.
The &amp;lsquo;severe&amp;rsquo; interactions are highlighted on my sidebar. (As well as severity totals as a whole.)
I&amp;rsquo;ve also made an on:hover comparison tool, for the drug selected and any other.</description>
    </item>
    
    <item>
      <title>All The Medicine</title>
      <link>https://fergustaylor.github.io/post/all-the-medicine/</link>
      <pubDate>Sun, 17 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://fergustaylor.github.io/post/all-the-medicine/</guid>
      <description>I&amp;rsquo;ve made a dendrogram based off the chemical lists provided by NHS digital. (As part of their CCG Spending data).
These lists give a name, and lookup code for every medicine licensed in the UK based on BNF Sections.
E.g Adenosine (Chemical Sub: 0203020C0), i.e BNF &amp;gt; 2. &amp;lsquo;Cardiovascular System&amp;rsquo; &amp;gt; 2.3 &amp;lsquo;Anti-Arrhythmic Drugs&amp;rsquo; &amp;gt; 2.3.2 &amp;lsquo;Drugs for Arrhythmias&amp;rsquo;
This 3-layer dendrogram is composed of every medicine (3292) listed on this look-up for potential NHS spending.</description>
    </item>
    
    <item>
      <title>The BNF Project</title>
      <link>https://fergustaylor.github.io/post/the-bnf-project/</link>
      <pubDate>Fri, 15 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://fergustaylor.github.io/post/the-bnf-project/</guid>
      <description>I eventually learnt how to convert the BNF interactions into a JSON format compatible for the MBostock example of a tensionable hierachical edge bundling diagram.
See the interactive version here.

First every drug, then I reduced it to the 100 most common medications (arbritrarily taken from an article).

See the interactive version here. Whilst the adjacency relationships (drug-drug interaction) work, the drugs aren&amp;rsquo;t grouped by class yet and so increased bundling doesn&amp;rsquo;t reveal anything useful.</description>
    </item>
    
    <item>
      <title>BNF Sections Visualised</title>
      <link>https://fergustaylor.github.io/post/bnf-sections-visualised/</link>
      <pubDate>Thu, 14 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://fergustaylor.github.io/post/bnf-sections-visualised/</guid>
      <description>It’s been a while since my last post, and since then I’ve been tinkering at new D3.js examples, and trying to make sense of the respective JS/CSS/HTML DOM components. I’ve found experimented with a few different new environements, including the Google Chrome developer console, but the most intuitive I’ve found has actually been Codepen.
See the dendrograms below. Or interact with them all, here. By pressing left or right.</description>
    </item>
    
    <item>
      <title>Interactions Visualised</title>
      <link>https://fergustaylor.github.io/post/interactions-visualised/</link>
      <pubDate>Sun, 22 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://fergustaylor.github.io/post/interactions-visualised/</guid>
      <description>I finally made some sankey diagrams using an R import for the D3 graph. I’ll write the methodology up in a separate post once I can create something a bit more visualy informative.
Photos of the BNF drug interactions with varying tension.
See the interactive version See the interactive version See the interactive version</description>
    </item>
    
    <item>
      <title>Interactions Continued</title>
      <link>https://fergustaylor.github.io/post/interactions-continued/</link>
      <pubDate>Wed, 18 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://fergustaylor.github.io/post/interactions-continued/</guid>
      <description>I made a few additions to my previous post, after realising I could use the CSS selector to list the interaction information. (I.e if you combine drugs, will it increase the blood concentration of the other? Or reduce it? Or risk a given side-effect, etc..)
I built this into the previous code. (See the full code).
#Interactions interactions &amp;lt;- mapply(url = data, css = drugs_list$css_string, function(url, css){ url %&amp;gt;% html_nodes(css) %&amp;gt;% html_text() }) example_dataframe &amp;lt;- cbind(example_dataframe, data_frame(interactions)) #Rename columns example_dataframe &amp;lt;- example_dataframe %&amp;gt;% rename(Class = &amp;#39;class&amp;#39;, &amp;#39;Dangerous Interactions&amp;#39; = &amp;#39;dangerousi&amp;#39;, Interactions = &amp;#39;interactions&amp;#39;) Afterwards I then looked up openprescribing.</description>
    </item>
    
    <item>
      <title>Drug Interactions</title>
      <link>https://fergustaylor.github.io/post/drug-interactions/</link>
      <pubDate>Mon, 09 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://fergustaylor.github.io/post/drug-interactions/</guid>
      <description>I was thinking about drug interactions the other day: the relevant, and/or dangerous interactions that can occure in patients with multiple comorbidities. And I realised then, how few of these interactions I’d learnt by-heart. If I’d wanted to check, I would have looked up a patient’s drugs up in the BNF individually.
To try to learn them, I want to visualise them - although I’ll likely never learn them all whilst new obscure drugs come out, or drug interactions are discovered over time.</description>
    </item>
    
    <item>
      <title>openprescribingR Plots3</title>
      <link>https://fergustaylor.github.io/post/openprescribingr-plots3/</link>
      <pubDate>Thu, 28 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://fergustaylor.github.io/post/openprescribingr-plots3/</guid>
      <description>OpenprescribingR allows you to explore spending and list size data on over 200 different clinical commissioning groups, 9790 prescribing centres, and 23 BNF sections (as well as every invidual drug or presentation).
Updated the old openprescribing graphics, with ggiraph. Then added some for my last post as well.
UPDATE 29/03/18: I&amp;rsquo;ve updated the graphics in the following post.
     </description>
    </item>
    
    <item>
      <title>openprescribingR Plots2</title>
      <link>https://fergustaylor.github.io/post/openprescribingr-plots2/</link>
      <pubDate>Wed, 27 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://fergustaylor.github.io/post/openprescribingr-plots2/</guid>
      <description>Experimenting with timelapse drawing in &amp;lsquo;Procreate&amp;rsquo; the ios app; made the following for openprescribingR.
  See the code used in this example here.
See the repository on github.
  And a couple I made afterwards after exploring geom_line/geom_ribbon properly.
Below is a geom_step of each practice spending in the CCG (median value = blue, the chosen clinic&amp;rsquo;s spending = red). The second is a geom_line version of the same data + dark geom_ribbon for the Q1-Q3, light geom_ribbon for the min-max of values.</description>
    </item>
    
    <item>
      <title>More examples for openprescribingR</title>
      <link>https://fergustaylor.github.io/post/more-examples-for-openprescribingr/</link>
      <pubDate>Mon, 25 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://fergustaylor.github.io/post/more-examples-for-openprescribingr/</guid>
      <description>This package works by interacting with the openprescribing.net api. Openprescribing.net continues to collate monthly data from NHS digital, which means that you can search the entire dataset without downloading each monthly file. It uses limited search arguments to return data. (This will be updated as the api changes). As such it&amp;rsquo;s not possible to return a desired dataset in some cases by using one function alone in this package. However, it is possible to cross-reference functions in order to return the dataset you&amp;rsquo;d like.</description>
    </item>
    
    <item>
      <title>openprescribingR Plots</title>
      <link>https://fergustaylor.github.io/post/openprescribingr-plots/</link>
      <pubDate>Fri, 22 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://fergustaylor.github.io/post/openprescribingr-plots/</guid>
      <description>Made a new package to return a set of default plots based on my openprescribingR import tool.
Currently returns a leaflet map showing;
 spending per person total spending total no. of items total quantity of items quantity per item listsizes  .. for each CCG, for each month this year.
This can be for any BNF section, chemical, or presentation.
See the repository.
library(devtools) devtools::install_github(&amp;quot;fergustaylor/openprescribingRplots&amp;quot;) library(openprescribingRplots) plot2017perperson(&amp;quot;7.4.5&amp;quot;) plot2017total(&amp;quot;7.4.5&amp;quot;) plot2017items(&amp;quot;7.4.5&amp;quot;) plot2017quantity(&amp;quot;7.</description>
    </item>
    
    <item>
      <title>openprescribingR UPDATE 2</title>
      <link>https://fergustaylor.github.io/post/openprescribingr-update-2/</link>
      <pubDate>Fri, 15 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://fergustaylor.github.io/post/openprescribingr-update-2/</guid>
      <description>  See the map.
See the code.
   </description>
    </item>
    
    <item>
      <title>openprescribingR UPDATE</title>
      <link>https://fergustaylor.github.io/post/openprescribingr-update/</link>
      <pubDate>Wed, 13 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://fergustaylor.github.io/post/openprescribingr-update/</guid>
      <description>I wanted to plot some of this new openprescribing data geographically today after playing around with the new functions, however I soon realised I needed locations, and so I converted the &amp;lsquo;CCG boundaries&amp;rsquo; section of the api.
New Function 7. CCG boundaries Search for the boundaries of a CCG, or location of a practice, by code. Returns GeoJSON.
   Output Function     Boundaries of all CCGs CCG_boundaries_or_location()   Boundaries of an individual CCG CCG_boundaries_or_location(CCG_code = &amp;ldquo;99H&amp;rdquo;)   Location (approximate) of practices in a CCG, by code CCG_boundaries_or_location(CCG_code = &amp;ldquo;99H&amp;rdquo;)   Location (approximate) of a practice in a CCG CCG_boundaries_or_location(CCG_code = &amp;ldquo;99H&amp;rdquo;, practice_code = &amp;ldquo;P87003&amp;rdquo;)   Location (approximate) of a practice in a CCG CCG_boundaries_or_location(practice_code = &amp;ldquo;P87003&amp;rdquo;)    Personally I find it very difficult to read JSON files, so you can tidy it up afterwards using JSONlite or tidyjson but I&amp;rsquo;ll leave that to you.</description>
    </item>
    
    <item>
      <title>openprescribingR</title>
      <link>https://fergustaylor.github.io/post/openprescribingr/</link>
      <pubDate>Mon, 11 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://fergustaylor.github.io/post/openprescribingr/</guid>
      <description>Using the (beta) RESTful API and a few lines of R, I made a set of functions to download and import OpenPrescribing data directly into RStudio. There are 6 functions, divided into data look-up and data-import tools.
Installation:
library(devtools)
devtools::install_github(&amp;quot;fergustaylor/openprescribingR&amp;quot;)
Load:
library(openprescribingR)
These functions give details on drugs/organisations/list sizes.
 drug_details()
 organisation_codes()
 list_size()
  These functions allow you to load data.
 spending_by_CCG()
 spending_by_code()
 spending_by_practice()</description>
    </item>
    
    <item>
      <title>Public Health Outcomes Framework</title>
      <link>https://fergustaylor.github.io/post/public-health-outcomes-framework/</link>
      <pubDate>Fri, 04 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://fergustaylor.github.io/post/public-health-outcomes-framework/</guid>
      <description>I initially saw the notice of the August update via twitter @PHE_uk, but I later found the full future publication timeline available at gov.uk.
 All their new statistics are summarised in their blog Public Health Matters, and the data is available online with interactive plots through their Fingertips service.
It summarises 33 different National Public Health Profiles, including the most recent version of the Public Health Outcomes Framework.
While I was prepared to download information I wanted directly through the site - I found their fantastic package tool &amp;lsquo;fingertipsR&amp;rsquo; which allows me to import PH data from all profiles directly into the R environment through their API.</description>
    </item>
    
    <item>
      <title>Arran SIMD GIFs</title>
      <link>https://fergustaylor.github.io/post/arran-continued/</link>
      <pubDate>Sat, 29 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://fergustaylor.github.io/post/arran-continued/</guid>
      <description>Made another leaflet map in R to try out some of the chloropleth tutorials and to see if I could easily adapt the code I&amp;rsquo;d been using just for Arran, to show all of Scotland. As it turned out I managed to write the code in 15 minutes. It then crashed immediately, and I had to leave the computer running all night in order to export it as HTML.</description>
    </item>
    
    <item>
      <title>Arran</title>
      <link>https://fergustaylor.github.io/post/arran/</link>
      <pubDate>Fri, 28 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://fergustaylor.github.io/post/arran/</guid>
      <description>See the map.
Introduction This is an early project based on SIMD data that I&amp;rsquo;m using to try and learn R. I&amp;rsquo;ve used the package &amp;lsquo;ggplot2&amp;rsquo; as part of the Tidyverse to practice a set of skills I&amp;rsquo;m attempting to learn through a combination of DataCamp courses, RStudio &amp;lsquo;Cheat Sheets&amp;rsquo; and twitter.
I thought Arran would make nice maps.
Early progress Initially I used map cordinates given by Ordinance Survey to find the centre of any KA27 postcode on a map.</description>
    </item>
    
  </channel>
</rss>