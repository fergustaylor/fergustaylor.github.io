<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Fergus on Fergus Taylor</title>
    <link>https://fergustaylor.github.io/categories/fergus/</link>
    <description>Recent content in Fergus on Fergus Taylor</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-uk</language>
    <lastBuildDate>Thu, 28 Sep 2017 13:39:46 +0200</lastBuildDate>
    
	<atom:link href="https://fergustaylor.github.io/categories/fergus/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>openprescribingR Plots3</title>
      <link>https://fergustaylor.github.io/post/post10/</link>
      <pubDate>Thu, 28 Sep 2017 13:39:46 +0200</pubDate>
      
      <guid>https://fergustaylor.github.io/post/post10/</guid>
      <description>OpenprescribingR allows you to explore spending and list size data on over 200 different clinical commissioning groups, 9790 prescribing centres, and 23 BNF sections (as well as every invidual drug or presentation).
Updated the old openprescribing graphics, with ggiraph. Then added some for my last post as well.
 iframe { width: 500px; height: 500px; }  
 iframe { width: 500px; height: 500px; }  
 iframe { width: 500px; height: 500px; }</description>
    </item>
    
    <item>
      <title>openprescribingR Plots2</title>
      <link>https://fergustaylor.github.io/post/post9/</link>
      <pubDate>Wed, 27 Sep 2017 13:39:46 +0200</pubDate>
      
      <guid>https://fergustaylor.github.io/post/post9/</guid>
      <description>Experimenting with timelapse drawing in &amp;lsquo;Procreate&amp;rsquo; the ios app; made the following for openprescribingR.
  See the code used in this example here.
See the repository on github.
And a couple I made afterwards after exploring geom_line/geom_ribbon properly.
Below is a geom_step of each practice spending in the CCG (median value = blue, the chosen clinic&amp;rsquo;s spending = red). The second is a geom_line version of the same data + dark geom_ribbon for the Q1-Q3, light geom_ribbon for the min-max of values.</description>
    </item>
    
    <item>
      <title>openprescribingR Plots</title>
      <link>https://fergustaylor.github.io/post/post7/</link>
      <pubDate>Fri, 22 Sep 2017 13:39:46 +0200</pubDate>
      
      <guid>https://fergustaylor.github.io/post/post7/</guid>
      <description>Made a new package to return a set of default plots based on my openprescribingR import tool.
Currently returns a leaflet map showing;
 spending per person total spending total no. of items total quantity of items quantity per item listsizes  .. for each CCG, for each month this year.
This can be for any BNF section, chemical, or presentation.
See the repository.
library(devtools) devtools::install_github(&amp;quot;fergustaylor/openprescribingRplots&amp;quot;) library(openprescribingRplots) plot2017perperson(&amp;quot;7.4.5&amp;quot;) plot2017total(&amp;quot;7.4.5&amp;quot;) plot2017items(&amp;quot;7.4.5&amp;quot;) plot2017quantity(&amp;quot;7.</description>
    </item>
    
    <item>
      <title>More examples for openprescribingR</title>
      <link>https://fergustaylor.github.io/post/post8/</link>
      <pubDate>Sun, 17 Sep 2017 13:39:46 +0200</pubDate>
      
      <guid>https://fergustaylor.github.io/post/post8/</guid>
      <description>This package works by interacting with the openprescribing.net api. Openprescribing.net continues to collate monthly data from NHS digital, which means that you can search the entire dataset without downloading each monthly file. It uses limited search arguments to return data. (This will be updated as the api changes). As such it&amp;rsquo;s not possible to return a desired dataset in some cases by using one function alone in this package. However, it is possible to cross-reference functions in order to return the dataset you&amp;rsquo;d like.</description>
    </item>
    
    <item>
      <title>openprescribingR UPDATE 2</title>
      <link>https://fergustaylor.github.io/post/post6/</link>
      <pubDate>Fri, 15 Sep 2017 13:39:46 +0200</pubDate>
      
      <guid>https://fergustaylor.github.io/post/post6/</guid>
      <description>See the map.
See the code.</description>
    </item>
    
    <item>
      <title>openprescribingR UPDATE</title>
      <link>https://fergustaylor.github.io/post/post5/</link>
      <pubDate>Wed, 13 Sep 2017 13:39:46 +0200</pubDate>
      
      <guid>https://fergustaylor.github.io/post/post5/</guid>
      <description>I wanted to plot some of this new openprescribing data geographically today after playing around with the new functions, however I soon realised I needed locations, and so I converted the &amp;lsquo;CCG boundaries&amp;rsquo; section of the api.
New Function 7. CCG boundaries Search for the boundaries of a CCG, or location of a practice, by code. Returns GeoJSON.
   Output Function     Boundaries of all CCGs CCG_boundaries_or_location()   Boundaries of an individual CCG CCG_boundaries_or_location(CCG_code = &amp;ldquo;99H&amp;rdquo;)   Location (approximate) of practices in a CCG, by code CCG_boundaries_or_location(CCG_code = &amp;ldquo;99H&amp;rdquo;)   Location (approximate) of a practice in a CCG CCG_boundaries_or_location(CCG_code = &amp;ldquo;99H&amp;rdquo;, practice_code = &amp;ldquo;P87003&amp;rdquo;)   Location (approximate) of a practice in a CCG CCG_boundaries_or_location(practice_code = &amp;ldquo;P87003&amp;rdquo;)    Personally I find it very difficult to read JSON files, so you can tidy it up afterwards using JSONlite or tidyjson but I&amp;rsquo;ll leave that to you.</description>
    </item>
    
    <item>
      <title>openprescribingR</title>
      <link>https://fergustaylor.github.io/post/post4/</link>
      <pubDate>Mon, 11 Sep 2017 13:39:46 +0200</pubDate>
      
      <guid>https://fergustaylor.github.io/post/post4/</guid>
      <description>Using the (beta) RESTful API and a few lines of R, I made a set of functions to download and import OpenPrescribing data directly into RStudio. There are 6 functions, divided into data look-up and data-import tools.
Installation:
library(devtools)
devtools::install_github(&amp;quot;fergustaylor/openprescribingR&amp;quot;)
Load:
library(openprescribingR)
These functions give details on drugs/organisations/list sizes.
 drug_details()
 organisation_codes()
 list_size()
  These functions allow you to load data.
 spending_by_CCG()
 spending_by_code()
 spending_by_practice()</description>
    </item>
    
    <item>
      <title>Public Health Outcomes Framework</title>
      <link>https://fergustaylor.github.io/post/post3/</link>
      <pubDate>Fri, 04 Aug 2017 13:39:46 +0200</pubDate>
      
      <guid>https://fergustaylor.github.io/post/post3/</guid>
      <description>I initially saw the notice of the August update via twitter @PHE_uk, but I later found the full future publication timeline available at gov.uk.
All their new statistics are summarised in their blog Public Health Matters, and the data is available online with interactive plots through their Fingertips service.
It summarises 33 different National Public Health Profiles, including the most recent version of the Public Health Outcomes Framework.
While I was prepared to download information I wanted directly through the site - I found their fantastic package tool &amp;lsquo;fingertipsR&amp;rsquo; which allows me to import PH data from all profiles directly into the R environment through their API.</description>
    </item>
    
    <item>
      <title>Arran SIMD GIFs</title>
      <link>https://fergustaylor.github.io/post/post2/</link>
      <pubDate>Sat, 29 Jul 2017 13:39:46 +0200</pubDate>
      
      <guid>https://fergustaylor.github.io/post/post2/</guid>
      <description>Made another leaflet map in R to try out some of the chloropleth tutorials and to see if I could easily adapt the code I&amp;rsquo;d been using just for Arran, to show all of Scotland. As it turned out I managed to write the code in 15 minutes. It then crashed immediately, and I had to leave the computer running all night in order to export it as HTML.
In the end it was 166 MB in the end, and I&amp;rsquo;ll never be able to host it on Github.</description>
    </item>
    
    <item>
      <title>Arran</title>
      <link>https://fergustaylor.github.io/post/post1/</link>
      <pubDate>Fri, 28 Jul 2017 13:39:46 +0200</pubDate>
      
      <guid>https://fergustaylor.github.io/post/post1/</guid>
      <description>iframe { width: 500px; height: 500px; }  
See the map.
Introduction This is an early project based on SIMD data that I&amp;rsquo;m using to try and learn R. I&amp;rsquo;ve used the package &amp;lsquo;ggplot2&amp;rsquo; as part of the Tidyverse to practice a set of skills I&amp;rsquo;m attempting to learn through a combination of DataCamp courses, RStudio &amp;lsquo;Cheat Sheets&amp;rsquo; and twitter.
I thought Arran would make nice maps.</description>
    </item>
    
  </channel>
</rss>